#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-05 22:35\n"
"PO-Revision-Date: 2013-10-06 14:17+0000\n"
"Last-Translator: rduivenvoorde <richard@duif.net>\n"
"Language-Team: Japanese (http://www.transifex.com/projects/p/qgis-documentation/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Language: ja_JP\n"
"X-Source-Language: C\n"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:11
msgid "Map Rendering and Printing"
msgstr "地図のレンダリングと印刷"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:13
msgid ""
"There are generally two approaches when input data should be rendered as a "
"map: either do it quick way using :class:`QgsMapRenderer` or produce more "
"fine-tuned output by composing the map with :class:`QgsComposition` class "
"and friends."
msgstr ""
"入力したデータを地図としてレンダリングするには、主に二つの方法があります。手早くやるには :class:`QgsMapRenderer` "
"を使い、より手の込んだ地図を作成するのであれば :class:`QgsComposition` とその周辺を使用します。"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:20
msgid "Simple Rendering"
msgstr "シンプルなレンダリング"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:22
msgid ""
"Render some layers using :class:`QgsMapRenderer` - create destination paint "
"device (``QImage``, ``QPainter`` etc.), set up layer set, extent, output "
"size and do the rendering::"
msgstr ""
"いくつかのレイヤを :class:`QgsMapRenderer`を使ってレンダリングしてみてください。描画デバイスを (``QImage``, "
"``QPainter`` など) とし、レイヤーセットを extent に設定した上で、出力サイズを指定してレンダリングしてください。"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:63
msgid "Output using Map Composer"
msgstr "Map Composer を使って出力する"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:65
msgid ""
"Map composer is a very handy tool if you would like to do a more "
"sophisticated output than the simple rendering shown above. Using the "
"composer it is possible to create complex map layouts consisting of map "
"views, labels, legend, tables and other elements that are usually present on "
"paper maps. The layouts can be then exported to PDF, raster images or "
"directly printed on a printer."
msgstr ""
"Ma composer は通常のレンダリングよりも洒落た出力を得るには大変便利なツールです。Map "
"composerを使うと、地図の複雑なビューや、ラベル、凡例、テーブル、その他紙の地図で使用する様々な要素をレイアウトできます。その出力を PDF "
"やラスタ画像にエクスポートしたり、直接印刷することもできます。"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:71
msgid ""
"The composer consists of a bunch of classes. They all belong to the core "
"library. QGIS application has a convenient GUI for placement of the "
"elements, though it is not available in the gui library. If you are not "
"familiar with `Qt Graphics View framework "
"<http://doc.qt.nokia.com/stable/graphicsview.html>`_, then you are "
"encouraged to check the documentation now, because the composer is based on "
"it."
msgstr ""
"Map composerはいくつものクラスを集めたものです。全てのクラスはコアライブラリに属しています。QGIS "
"アプリケーションでは要素を配置するのに便利な GUI を持っていますが、これらをgui ライブラリで見る方法はありません。Map composerは "
"`Qt Graphics View framework "
"<http://doc.qt.nokia.com/stable/graphicsview.html>`_ をベースに作成しているので、`Qt "
"Graphics View framework` にあまりなじみが無いのでしたら、まずドキュメントを読むことをお勧めします。"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:78
msgid ""
"The central class of the composer is :class:`QgsComposition` which is "
"derived from :class:`QGraphicsScene`. Let us create one::"
msgstr ""
"composer の中心となるクラスは :class:`QgsComposition` です。これは "
":class:`QGraphicsScene`.の子クラスです。一つ作ってみましょう。::"

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:85
msgid ""
"Note that the composition takes an instance of :class:`QgsMapRenderer`. In "
"the code we expect we are running within QGIS application and thus use the "
"map renderer from map canvas. The composition uses various parameters from "
"the map renderer, most importantly the default set of map layers and the "
"current extent. When using composer in a standalone application, you can "
"create your own map renderer instance the same way as shown in the section "
"above and pass it to the composition."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:93
msgid ""
"It is possible to add various elements (map, label, ...) to the composition "
"--- these elements have to be descendants of :class:`QgsComposerItem` class. "
"Currently supported items are:"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:97
msgid ""
"map --- this item tells the libraries where to put the map itself. Here we "
"create a map and stretch it over the whole paper size::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:105
msgid ""
"label --- allows displaying labels. It is possible to modify its font, "
"color, alignment and margin::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:113
msgid "legend ::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:120
msgid "scale bar ::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:129
msgid "arrow"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:130
msgid "picture"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:131
msgid "shape"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:132
msgid "table"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:134
msgid ""
"By default the newly created composer items have zero position (top left "
"corner of the page) and zero size. The position and size are always measured "
"in millimeters::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:143
msgid "A frame is drawn around each item by default. How to remove the frame::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:148
msgid ""
"Besides creating the composer items by hand, QGIS has support for composer "
"templates which are essentially compositions with all their items saved to a "
".qpt file (with XML syntax). Unfortunately this functionality is not yet "
"available in the API."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:153
msgid ""
"Once the composition is ready (the composer items have been created and "
"added to the composition), we can proceed to produce a raster and/or vector "
"output."
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:156
msgid ""
"The default output settings for composition are page size A4 and resolution "
"300 DPI. You can change them if necessary. The paper size is specified in "
"millimeters::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:166
msgid "Output to a raster image"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:168
msgid ""
"The following code fragment shows how to render a composition to a raster "
"image::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:193
msgid "Output to PDF"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:195
msgid "The following code fragment renders a composition to a PDF file::"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:5
#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:17
msgid "map rendering"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:5
msgid "map printing"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:17
msgid "simple"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:60
#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:163
#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:190
msgid "output"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:60
msgid "using Map Composer"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:163
msgid "raster image"
msgstr ""

#: ../../source/docs/pyqgis_developer_cookbook/composer.rst:190
msgid "PDF"
msgstr ""
